/**
 */
package org.eclipse.dsl.basicfamily.basicfamily.impl;

import java.util.Collection;

import org.eclipse.dsl.basicfamily.basicfamily.BasicfamilyPackage;
import org.eclipse.dsl.basicfamily.basicfamily.Man;
import org.eclipse.dsl.basicfamily.basicfamily.Person;
import org.eclipse.dsl.basicfamily.basicfamily.Woman;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectWithInverseResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Person</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.dsl.basicfamily.basicfamily.impl.PersonImpl#getNeweclass3 <em>Neweclass3</em>}</li>
 *   <li>{@link org.eclipse.dsl.basicfamily.basicfamily.impl.PersonImpl#getNeweclass4 <em>Neweclass4</em>}</li>
 *   <li>{@link org.eclipse.dsl.basicfamily.basicfamily.impl.PersonImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.eclipse.dsl.basicfamily.basicfamily.impl.PersonImpl#getChildren <em>Children</em>}</li>
 *   <li>{@link org.eclipse.dsl.basicfamily.basicfamily.impl.PersonImpl#getParents <em>Parents</em>}</li>
 * </ul>
 *
 * @generated
 */
public abstract class PersonImpl extends MinimalEObjectImpl.Container implements Person {
	/**
	 * The cached value of the '{@link #getNeweclass3() <em>Neweclass3</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getNeweclass3()
	 * @generated
	 * @ordered
	 */
	protected Man neweclass3;

	/**
	 * The cached value of the '{@link #getNeweclass4() <em>Neweclass4</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getNeweclass4()
	 * @generated
	 * @ordered
	 */
	protected Woman neweclass4;

	/**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The cached value of the '{@link #getChildren() <em>Children</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getChildren()
	 * @generated
	 * @ordered
	 */
	protected EList<Person> children;

	/**
	 * The cached value of the '{@link #getParents() <em>Parents</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getParents()
	 * @generated
	 * @ordered
	 */
	protected EList<Person> parents;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PersonImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return BasicfamilyPackage.Literals.PERSON;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Man getNeweclass3() {
		if (neweclass3 != null && neweclass3.eIsProxy()) {
			InternalEObject oldNeweclass3 = (InternalEObject) neweclass3;
			neweclass3 = (Man) eResolveProxy(oldNeweclass3);
			if (neweclass3 != oldNeweclass3) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, BasicfamilyPackage.PERSON__NEWECLASS3,
							oldNeweclass3, neweclass3));
			}
		}
		return neweclass3;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Man basicGetNeweclass3() {
		return neweclass3;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setNeweclass3(Man newNeweclass3) {
		Man oldNeweclass3 = neweclass3;
		neweclass3 = newNeweclass3;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, BasicfamilyPackage.PERSON__NEWECLASS3, oldNeweclass3,
					neweclass3));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Woman getNeweclass4() {
		if (neweclass4 != null && neweclass4.eIsProxy()) {
			InternalEObject oldNeweclass4 = (InternalEObject) neweclass4;
			neweclass4 = (Woman) eResolveProxy(oldNeweclass4);
			if (neweclass4 != oldNeweclass4) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, BasicfamilyPackage.PERSON__NEWECLASS4,
							oldNeweclass4, neweclass4));
			}
		}
		return neweclass4;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Woman basicGetNeweclass4() {
		return neweclass4;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setNeweclass4(Woman newNeweclass4) {
		Woman oldNeweclass4 = neweclass4;
		neweclass4 = newNeweclass4;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, BasicfamilyPackage.PERSON__NEWECLASS4, oldNeweclass4,
					neweclass4));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, BasicfamilyPackage.PERSON__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EList<Person> getChildren() {
		if (children == null) {
			children = new EObjectWithInverseResolvingEList.ManyInverse<Person>(Person.class, this,
					BasicfamilyPackage.PERSON__CHILDREN, BasicfamilyPackage.PERSON__PARENTS);
		}
		return children;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EList<Person> getParents() {
		if (parents == null) {
			parents = new EObjectWithInverseResolvingEList.ManyInverse<Person>(Person.class, this,
					BasicfamilyPackage.PERSON__PARENTS, BasicfamilyPackage.PERSON__CHILDREN);
		}
		return parents;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
		case BasicfamilyPackage.PERSON__CHILDREN:
			return ((InternalEList<InternalEObject>) (InternalEList<?>) getChildren()).basicAdd(otherEnd, msgs);
		case BasicfamilyPackage.PERSON__PARENTS:
			return ((InternalEList<InternalEObject>) (InternalEList<?>) getParents()).basicAdd(otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
		case BasicfamilyPackage.PERSON__CHILDREN:
			return ((InternalEList<?>) getChildren()).basicRemove(otherEnd, msgs);
		case BasicfamilyPackage.PERSON__PARENTS:
			return ((InternalEList<?>) getParents()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
		case BasicfamilyPackage.PERSON__NEWECLASS3:
			if (resolve)
				return getNeweclass3();
			return basicGetNeweclass3();
		case BasicfamilyPackage.PERSON__NEWECLASS4:
			if (resolve)
				return getNeweclass4();
			return basicGetNeweclass4();
		case BasicfamilyPackage.PERSON__NAME:
			return getName();
		case BasicfamilyPackage.PERSON__CHILDREN:
			return getChildren();
		case BasicfamilyPackage.PERSON__PARENTS:
			return getParents();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
		case BasicfamilyPackage.PERSON__NEWECLASS3:
			setNeweclass3((Man) newValue);
			return;
		case BasicfamilyPackage.PERSON__NEWECLASS4:
			setNeweclass4((Woman) newValue);
			return;
		case BasicfamilyPackage.PERSON__NAME:
			setName((String) newValue);
			return;
		case BasicfamilyPackage.PERSON__CHILDREN:
			getChildren().clear();
			getChildren().addAll((Collection<? extends Person>) newValue);
			return;
		case BasicfamilyPackage.PERSON__PARENTS:
			getParents().clear();
			getParents().addAll((Collection<? extends Person>) newValue);
			return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
		case BasicfamilyPackage.PERSON__NEWECLASS3:
			setNeweclass3((Man) null);
			return;
		case BasicfamilyPackage.PERSON__NEWECLASS4:
			setNeweclass4((Woman) null);
			return;
		case BasicfamilyPackage.PERSON__NAME:
			setName(NAME_EDEFAULT);
			return;
		case BasicfamilyPackage.PERSON__CHILDREN:
			getChildren().clear();
			return;
		case BasicfamilyPackage.PERSON__PARENTS:
			getParents().clear();
			return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
		case BasicfamilyPackage.PERSON__NEWECLASS3:
			return neweclass3 != null;
		case BasicfamilyPackage.PERSON__NEWECLASS4:
			return neweclass4 != null;
		case BasicfamilyPackage.PERSON__NAME:
			return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
		case BasicfamilyPackage.PERSON__CHILDREN:
			return children != null && !children.isEmpty();
		case BasicfamilyPackage.PERSON__PARENTS:
			return parents != null && !parents.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy())
			return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(')');
		return result.toString();
	}

} //PersonImpl
